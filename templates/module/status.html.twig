{% extends 'base.html.twig' %}

{% block title %}WebreatheApp - État des modules{% endblock %}

{% block stylesheets %}
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <style>
    body {
      background-color: #f8f9fa;
    }

    h1 {
      text-align: center;
      margin-top: 50px;
      margin-bottom: 50px;
    }

    table {
      margin: 0 auto;
      background-color: #fff;
      width: 80%;
      border-collapse: collapse;
      border: 1px solid #dee2e6;
    }

    th,
    td {
      text-align: center;
      padding: 10px;
      border: 1px solid #dee2e6;
    }

    tr.panne {
      background-color: #f8f9fa;
      color: #555;
    }

    tr canvas.panne-chart {
      border-color: #555;
      background-color: rgba(85, 85, 85, 0.1);
    }

    @media (max-width: 990px) {
    .navbar-nav.ml-auto {
      text-align: right;
    }

    thead th:not(:first-child) {
      display: none;
    }

    td, th {
        display: block;
    }

    td[data-th]:before  {
        content: attr(data-th);
    }
  }
  </style>
{% endblock %}

{% block body %}

<script>
  $(document).ready(function() {
    var charts = {};

    // Fonction de mise à jour des graphiques
    function updateCharts() {
      $.ajax({
        url: '/update',
        method: 'GET',
        success: function(data) {
          var parsedData = JSON.parse(data); // Convertir la chaîne JSON en objet JavaScript

          parsedData.forEach(function(obj) {
            // Accéder aux propriétés de chaque objet
            var name = obj.nom;
            var description = obj.description;
            var installation = obj.installation.date;
            var chartData = obj.chartData;

            if (obj.etat) {
              var etat = "Fonctionne normalement";
            } else {
              var etat = "EN PANNE";
            }

            // Vérifier si la ligne pour ce module existe déjà
            var row = document.getElementById("moduleRow_" + obj.id);

            if (row) {
              // La ligne existe déjà, mettre à jour les cellules spécifiques et gestion de l'état "en panne"
              if (obj.etat) {
                row.classList.remove("panne");
                var chartCell = row.querySelector(".panne-chart");
                if (chartCell) {
                  chartCell.classList.remove("panne-chart");
                }
              } else {
                row.classList.add("panne");
                var chartCell = row.querySelector("canvas");
                if (chartCell) {
                  chartCell.classList.add("panne-chart");
                }
              }
              row.cells[0].textContent = name;
              row.cells[1].innerHTML = description;
              row.cells[2].textContent = etat;
              row.cells[3].textContent = installation.split(' ')[0];
            } else {
              // Créer de nouveaux éléments HTML pour représenter les nouvelles informations
              row = document.createElement("tr");
              row.id = "moduleRow_" + obj.id;

              var nameCell = document.createElement("td");
              var descriptionCell = document.createElement("td");
              var etatCell = document.createElement("td");
              var dateCell = document.createElement("td");
              var chartCell = document.createElement("td");

              // Remplir les nouvelles cellules avec les données appropriées
              nameCell.textContent = name;
              descriptionCell.innerHTML = description;
              etatCell.textContent = etat;
              dateCell.textContent = installation.split(' ')[0];
              chartCell.innerHTML = '<canvas id="moduleChart_' + obj.id + '"></canvas>';

              // Ajouter les nouvelles cellules à la nouvelle ligne
              row.appendChild(nameCell);
              row.appendChild(descriptionCell);
              row.appendChild(etatCell);
              row.appendChild(dateCell);
              row.appendChild(chartCell);

              // Ajouter la nouvelle ligne au tableau existant sur la page
              var tableElement = document.getElementById("modules_status");
              tableElement.appendChild(row);
            }

            // Obtenir les 10 dernières mesures
            var lastMeasurements = {
              labels: chartData.labels.slice(-10),
              values: chartData.values.slice(-10)
            };

            // Vérifier si un graphique existe déjà pour ce module
            if (charts[obj.id]) {
              // Détruire le graphique existant
              charts[obj.id].destroy();
            }

            // Initialiser le graphique pour ce module spécifique
            var ctx = document.getElementById('moduleChart_' + obj.id).getContext('2d');
            var chart = new Chart(ctx, {
              type: 'line',
              data: {
                labels: lastMeasurements.labels,
                datasets: [
                  {
                    label: 'Valeur mesurée',
                    data: lastMeasurements.values,
                    borderColor: 'blue',
                    backgroundColor: 'rgba(0, 0, 255, 0.1)',
                    fill: true,
                  },
                ],
              },
              options: {
                animation: false, // Désactiver l'animation du graphique
                scales: {
                    x: {
                        display: false, // Cacher les labels de l'axe des abscisses
                    },
                },
                plugins: {
                    legend: {
                        display: false, // Cacher la légende
                    },
                },
              },
            });
            charts[obj.id] = chart;
          });
        },
        error: function(error) {
          // Code de gestion des erreurs ici
          console.error(error);
        }
      });
    }

    // Lancer la mise à jour des graphiques au chargement de la page
    updateCharts();

    // Lancer la mise à jour des graphiques à intervalles réguliers
    setInterval(function() {
      updateCharts();
    }, 3000); // Exécuter la requête toutes les 3 secondes 
  });

</script>


<div class="container">
  <h1>État des modules</h1>
  <div>
    <table>
      <thead>
        <tr>
          <th>Nom</th>
          <th>Description</th>
          <th>État de fonctionnement</th>
          <th>Date d'installation</th>
          <th>Graphique</th>
        </tr>
      </thead>
      <tbody id="modules_status">
        {% for module in modules %}
        <tr id="moduleRow_{{ module.id }}" {% if module.etat != 1 %}class="panne"{% endif %}>
          <td>{{ module.nom }}</td>
          <td>{{ module.description|raw }}</td>
          <td>
            {% if module.etat %}
            Fonctionne normalement
            {% else %}
            EN PANNE
            {% endif %}
          </td>
          <td>{{ module.installation|date('Y-m-d') }}</td>
          <td><canvas id="moduleChart_{{ module.id }}" {% if not module.etat %}class="panne-chart"{% endif %}></canvas></td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>

{% endblock %}
